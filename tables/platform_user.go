package tables

import (
  "github.com/google/uuid"
  "github.com/CodyPerakslis/voy-database/database"
  "time"
)

type PlatformUser struct {
  Id        *uuid.UUID  `json:"id,omitempty"`
  Username  *string     `json:"username,omitempty"`
  Subpath   *string     `json:"subpath,omitempty"`
  Created   *time.Time  `json:"created,omitempty"`
  Updated   *time.Time  `json:"updated,omitempty"`
  Private   *bool       `json:"private,omitempty"`
  Name      *string     `json:"name,omitempty"`
  Bio       *string     `json:"bio,omitempty"`
  PhotoUrl  *string     `json:"photo_url,omitempty"`
  AudioUrl  *string     `json:"audio_url,omitempty"`
  VideoUrl  *string     `json:"video_url,omitempty"`
  Data      *string     `json:"data,omitempty"`
}

func (u *PlatformUser) Select() *database.Request {
  return &database.Request{
    Operation: database.Query,
    Query: `SELECT COALESCE(json_agg(t), '[]'::json) FROM (SELECT * FROM platform_user) t;`,
  }
}

func (u *PlatformUser) CreateTable() *database.Request {
  return &database.Request{
    Operation: database.Exec,
    Query: `
CREATE TABLE IF NOT EXISTS platform_user (
  id        UUID          PRIMARY KEY,      -- Generated by Cognito
  username  TEXT          NOT NULL UNIQUE,  -- Associated with Cognito
  subpath   TEXT          NOT NULL UNIQUE,  -- Access. From Cognito log in
  created   TIMESTAMPTZ   NOT NULL,
  updated   TIMESTAMPTZ   NOT NULL,
  private   BOOLEAN,                        -- Private vs Public account
  name      TEXT,
  bio       TEXT,
  photo_url TEXT,
  audio_url TEXT,
  video_url TEXT,
  data      JSONB
);`,
  }
}
